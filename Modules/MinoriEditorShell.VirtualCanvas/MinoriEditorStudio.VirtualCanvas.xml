<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MinoriEditorShell.VirtualCanvas</name>
    </assembly>
    <members>
        <member name="T:MinoriEditorShell.VirtualCanvas.Services.IMesContentCanvas">
            <summary>
            This is used for multi-platform purpose.
            This assists in rendering native controll within netstandard.
            </summary>
        </member>
        <member name="T:MinoriEditorShell.VirtualCanvas.Services.IMesVirtualChild">
            <summary>
            This interface is implemented by the objects that you want to put in the VirtualCanvas.
            </summary>
        </member>
        <member name="P:MinoriEditorShell.VirtualCanvas.Services.IMesVirtualChild.Bounds">
            <summary>
            The bounds of your child object
            </summary>
        </member>
        <member name="E:MinoriEditorShell.VirtualCanvas.Services.IMesVirtualChild.BoundsChanged">
            <summary>
            Raise this event if the Bounds changes.
            </summary>
        </member>
        <member name="P:MinoriEditorShell.VirtualCanvas.Services.IMesVirtualChild.Visual">
            <summary>
            Return the current Visual or null if it has not been created yet.
            </summary>
        </member>
        <member name="M:MinoriEditorShell.VirtualCanvas.Services.IMesVirtualChild.CreateVisual(MinoriEditorShell.VirtualCanvas.Services.IMesVirtualCanvasControl)">
            <summary>
            Create the WPF visual for this object.
            </summary>
            <param name="parent">The canvas that is calling this method</param>
            <returns>The visual that can be displayed</returns>
        </member>
        <member name="M:MinoriEditorShell.VirtualCanvas.Services.IMesVirtualChild.DisposeVisual">
            <summary>
            Dispose the WPF visual for this object.
            </summary>
        </member>
        <member name="T:MinoriEditorShell.VirtualCanvas.ViewModels.MesVirtualCanvasViewModel">
            <summary>
            This demo shows the VirtualCanvas managing up to 50,000 random WPF shapes providing smooth scrolling and
            zooming while creating those shapes on the fly.  This helps make a WPF canvas that is a lot more
            scalable.
            
            Wrap your virtual canvas into a Scroll Viewer
            for example
            <code>
            xmlns:ui="clr-namespace:MinoriEditorStudio.VirtualCanvas.Platforms.Wpf.Controls;assembly=MinoriEditorStudio.VirtualCanvas"
            
            &lt;ScrollViewer
               x:Name="Scroller" 
               HorizontalScrollBarVisibility="Auto" 
               VerticalScrollBarVisibility="Auto" 
               CanContentScroll="True"&gt;
               &lt;VirtualCanvas x:Name="Graph" /&gt;
            &lt;/ScrollViewer&gt;
            </code>
            
            You would then need to call implement a view ctor simular to below
            
            DataContextChanged += (s, e) =>
            {
                VirtualCanvasViewModel dc = (VirtualCanvasViewModel)DataContext;
                dc.Graph = Graph;
                
                IContentCanvas canvas = dc.Graph.ContentCanvas;
                dc.Zoom = new MapZoom(canvas);
                dc.Pan = new Pan(canvas, dc.Zoom);
                dc.AutoScroll = new AutoScroll(canvas, dc.Zoom);
                dc.RectZoom = new RectangleSelectionGesture(canvas, dc.Zoom);
            };
            </summary>
        </member>
        <member name="P:MinoriEditorShell.VirtualCanvas.ViewModels.MesVirtualCanvasViewModel.Zoom">
            <summary>
            Platform zoom interface
            </summary>
        </member>
        <member name="P:MinoriEditorShell.VirtualCanvas.ViewModels.MesVirtualCanvasViewModel.Pan">
            <summary>
            Platform Pan interface
            </summary>
        </member>
        <member name="P:MinoriEditorShell.VirtualCanvas.ViewModels.MesVirtualCanvasViewModel.RectZoom">
            <summary>
            Rectangle Zoom platform interface
            </summary>
        </member>
        <member name="P:MinoriEditorShell.VirtualCanvas.ViewModels.MesVirtualCanvasViewModel.AutoScroll">
            <summary>
            Autoscroll zoom platform interface
            </summary>
        </member>
        <member name="P:MinoriEditorShell.VirtualCanvas.ViewModels.MesVirtualCanvasViewModel.Graph">
            <summary>
            Canvas Control platform interface
            </summary>
        </member>
    </members>
</doc>
